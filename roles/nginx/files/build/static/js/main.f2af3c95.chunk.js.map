{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityActionReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","prototypes","PropTypes","func","isRequired","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","project_CreateProjectButton","map","project_ProjectItem","key","object","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","event","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","dueDat","updateProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2af3c95.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure you wish to delete this project? This action cannot be undone.\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body mb-3\">\n          <div className=\"row projects-card\">\n            <div className=\"col-2\">\n              <label>\n                ID: <span className=\"mx-auto\">{project.projectIdentifier}</span>\n              </label>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8 project-labels\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.prototypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg create-project\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport CreateProjectButton from \"./project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.prototypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"http://localhost:8080/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"api/users/login\", LoginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/dashboard\" className=\"nav-link\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/dashboard\" className=\"nav-link\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/logout\"\n              className=\"nav-link\"\n              onClick={this.logout.bind(this)}\n            >\n              Log Out\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"nav-link\">\n              <i className=\"fas fa-user mr-1\" />\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"nav-link\">\n              Log In\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm mb-4\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Project Manager Lite\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-block mt-4 create-project-form\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst actionPayloadPresent = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: actionPayloadPresent(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityActionRedcuer from \"./securityActionReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityActionRedcuer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-block mt-4 update-project-form\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `Are you sure you wish to delete this task? This action cannot be undone.`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No project tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-block mt-4 add-task-form\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDat,\n      projectIdentifier,\n      created_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDat,\n      projectIdentifier,\n      created_At\n    });\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={this.state.projectIdentifier} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Project Manager Lite</h1>\n                <p className=\"lead\">Create projects. Cross the finish line.</p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg mr-2 landing-signup\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg mr-2 landing-login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-block mt-4 landing-signup\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-block mt-4 login-confirm\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}